buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.3'
		classpath 'net.sf.proguard:proguard-gradle:4.10'
    }
}


apply plugin: 'android'


dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
}


android {
    compileSdkVersion 19
    buildToolsVersion "20"

    defaultConfig {
        minSdkVersion 8
        versionCode 131
        versionName "1.3.1"
       // manifestPlaceholders = [ TD_CHANNEL_ID:"100"] 
    }
    
    sourceSets {
        main {
			manifest.srcFile 'AndroidManifest.xml'
			java.srcDirs = ['src']
			res.srcDirs = ['res']
			assets.srcDirs = ['assets']
        }
    }

    signingConfigs {
        release {
            storeFile file("xxAssistant.keystore")
            storePassword “********”
            keyAlias “**”
            keyPassword “*********”
        }
    }
    buildTypes {
        release {
        	runProguard true
        	zipAlign true

        	//proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt' 
			proguardFile rootProject.file('proguard-project.txt')
			signingConfig signingConfigs.release
			applicationVariants.all { variant ->
          		def file = variant.outputFile
            	variant.outputFile = new File(file.parent, file.name.replace(".apk", "_" + defaultConfig.versionName + "_" + defaultConfig.versionCode + ".apk"))
            }
        }
        debug {
            runProguard false
            zipAlign true
        }
    }
}

task copyJniSo(type: Copy) {
	from 'libs/armeabi'
	into new File('src/main/jniLibs/armeabi')
}

tasks.withType(Compile) { compileTask -> compileTask.dependsOn copyJniSo }
clean.dependsOn 'cleanCopyJniSo'

// 用于清除编译后留存下的 src/main/jniLibs 文件夹
task xxx(){
	delete 'src/main'
}

task xx(){
	dependsOn assembleRelease, cleanCopyJniSo
}
